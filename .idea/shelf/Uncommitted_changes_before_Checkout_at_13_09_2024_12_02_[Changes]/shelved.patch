Index: src/main/java/bankapp/bankApplication/model/User.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package bankapp.bankApplication.model;\r\n\r\nimport jakarta.persistence.*;\r\nimport lombok.Data;\r\nimport lombok.NoArgsConstructor;\r\n\r\n@Data\r\n@NoArgsConstructor\r\n@MappedSuperclass\r\npublic class User {\r\n    @Id\r\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\r\n    private Long id;\r\n    private String name;\r\n\r\n    @OneToOne\r\n    private UserRegistration userName;\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/bankapp/bankApplication/model/User.java b/src/main/java/bankapp/bankApplication/model/User.java
--- a/src/main/java/bankapp/bankApplication/model/User.java	(revision 56969a294c3fbdc1a54ca0cb645e3427ac2b0e10)
+++ b/src/main/java/bankapp/bankApplication/model/User.java	(date 1726220824602)
@@ -7,12 +7,12 @@
 @Data
 @NoArgsConstructor
 @MappedSuperclass
-public class User {
+public abstract class User {
     @Id
     @GeneratedValue(strategy = GenerationType.IDENTITY)
     private Long id;
     private String name;
 
     @OneToOne
-    private UserRegistration userName;
+    private UserRegistration user;
 }
Index: src/main/java/bankapp/bankApplication/repository/TransactionRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package bankapp.bankApplication.repository;\r\n\r\nimport bankapp.bankApplication.model.AccountHolder;\r\nimport org.springframework.data.jpa.repository.JpaRepository;\r\nimport org.springframework.stereotype.Repository;\r\n\r\n@Repository\r\npublic interface TransactionRepository extends JpaRepository<AccountHolder, Long>  {\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/bankapp/bankApplication/repository/TransactionRepository.java b/src/main/java/bankapp/bankApplication/repository/TransactionRepository.java
--- a/src/main/java/bankapp/bankApplication/repository/TransactionRepository.java	(revision 56969a294c3fbdc1a54ca0cb645e3427ac2b0e10)
+++ b/src/main/java/bankapp/bankApplication/repository/TransactionRepository.java	(date 1726220488905)
@@ -1,9 +1,10 @@
 package bankapp.bankApplication.repository;
 
 import bankapp.bankApplication.model.AccountHolder;
+import bankapp.bankApplication.model.Transaction;
 import org.springframework.data.jpa.repository.JpaRepository;
 import org.springframework.stereotype.Repository;
 
 @Repository
-public interface TransactionRepository extends JpaRepository<AccountHolder, Long>  {
+public interface TransactionRepository extends JpaRepository<Transaction, Long>  {
 }
Index: src/main/java/bankapp/bankApplication/repository/ThirdPartyRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package bankapp.bankApplication.repository;\r\n\r\n\r\nimport bankapp.bankApplication.model.AccountHolder;\r\nimport org.springframework.data.jpa.repository.JpaRepository;\r\nimport org.springframework.stereotype.Repository;\r\n\r\n@Repository\r\npublic interface ThirdPartyRepository extends JpaRepository<AccountHolder, Long>  {\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/bankapp/bankApplication/repository/ThirdPartyRepository.java b/src/main/java/bankapp/bankApplication/repository/ThirdPartyRepository.java
--- a/src/main/java/bankapp/bankApplication/repository/ThirdPartyRepository.java	(revision 56969a294c3fbdc1a54ca0cb645e3427ac2b0e10)
+++ b/src/main/java/bankapp/bankApplication/repository/ThirdPartyRepository.java	(date 1726220488939)
@@ -2,9 +2,10 @@
 
 
 import bankapp.bankApplication.model.AccountHolder;
+import bankapp.bankApplication.model.ThirdParty;
 import org.springframework.data.jpa.repository.JpaRepository;
 import org.springframework.stereotype.Repository;
 
 @Repository
-public interface ThirdPartyRepository extends JpaRepository<AccountHolder, Long>  {
+public interface ThirdPartyRepository extends JpaRepository<ThirdParty, Long>  {
 }
Index: src/main/java/bankapp/bankApplication/repository/AccountRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package bankapp.bankApplication.repository;\r\n\r\nimport bankapp.bankApplication.model.AccountHolder;\r\nimport org.springframework.data.jpa.repository.JpaRepository;\r\nimport org.springframework.stereotype.Repository;\r\n\r\n@Repository\r\npublic interface AccountRepository extends JpaRepository<AccountHolder, Long>  {\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/bankapp/bankApplication/repository/AccountRepository.java b/src/main/java/bankapp/bankApplication/repository/AccountRepository.java
--- a/src/main/java/bankapp/bankApplication/repository/AccountRepository.java	(revision 56969a294c3fbdc1a54ca0cb645e3427ac2b0e10)
+++ b/src/main/java/bankapp/bankApplication/repository/AccountRepository.java	(date 1726220488967)
@@ -1,9 +1,10 @@
 package bankapp.bankApplication.repository;
 
+import bankapp.bankApplication.model.Account;
 import bankapp.bankApplication.model.AccountHolder;
 import org.springframework.data.jpa.repository.JpaRepository;
 import org.springframework.stereotype.Repository;
 
 @Repository
-public interface AccountRepository extends JpaRepository<AccountHolder, Long>  {
+public interface AccountRepository extends JpaRepository<Account, Long>  {
 }
Index: src/main/java/bankapp/bankApplication/model/Account.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package bankapp.bankApplication.model;\r\n\r\nimport bankapp.bankApplication.enums.AccountType;\r\nimport jakarta.persistence.*;\r\nimport lombok.Data;\r\nimport lombok.NoArgsConstructor;\r\n\r\nimport java.math.BigDecimal;\r\nimport java.time.LocalDate;\r\nimport java.util.List;\r\n\r\n@Data\r\n@NoArgsConstructor\r\n@Entity\r\npublic class Account {\r\n    @Id\r\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\r\n    private Long id;\r\n\r\n    @Enumerated\r\n    private AccountType type;\r\n    private String accountNumber;\r\n\r\n    @Embedded\r\n    @AttributeOverrides({\r\n            @AttributeOverride(name = \"amount\", column = @Column(name = \"balance_amount\")),\r\n            @AttributeOverride(name= \"currency\", column = @Column(name= \"balance_currency\"))\r\n    })\r\n    private Money balance;// en caso creditcard Jarko\r\n\r\n    private String secretKey;\r\n\r\n    @ManyToOne\r\n    private AccountHolder mainOwner;\r\n\r\n    @ManyToOne\r\n    private AccountHolder secondaryOwner;\r\n\r\n    private LocalDate creationDate;\r\n    private LocalDate lastDateUpdatedInterest; //aplicar fórmula del interés compuesto\r\n\r\n    @Embedded\r\n    @AttributeOverrides({\r\n            @AttributeOverride(name = \"amount\", column = @Column(name = \"penaltyFee_amount\")),\r\n            @AttributeOverride(name= \"currency\", column = @Column(name= \"penaltyFee_currency\"))\r\n    })\r\n    private Money penaltyFee;\r\n\r\n    @Embedded\r\n    @AttributeOverrides({\r\n            @AttributeOverride(name = \"amount\", column = @Column(name = \"minimumBalance_amount\")),\r\n            @AttributeOverride(name= \"currency\", column = @Column(name= \"minimumBalance_currency\"))\r\n    })\r\n    private Money minimumBalance;\r\n\r\n    @Embedded\r\n    @AttributeOverrides({\r\n            @AttributeOverride(name = \"amount\", column = @Column(name = \"monthlyMaintenanceFee_amount\")),\r\n            @AttributeOverride(name= \"currency\", column = @Column(name= \"monthlyMaintenanceFee_currency\"))\r\n    })\r\n    private Money monthlyMaintenanceFee;\r\n\r\n    //atributs de la credit card, recordar modificar el setter de la creditCard perque no te tases igual que la de estudiants\r\n    // el setMonthlyMaintenanceFee i el minimumBalance\r\n\r\n    private Float interestRate; // en caso creditcard Jarko\r\n\r\n    @Embedded\r\n    @AttributeOverrides({\r\n            @AttributeOverride(name = \"amount\", column = @Column(name = \"creditLimit_amount\")),\r\n            @AttributeOverride(name= \"currency\", column = @Column(name= \"creditLimit_currency\"))\r\n    })\r\n    private Money creditLimit; // en caso creditcard Jarko\r\n\r\n    @Enumerated(EnumType.STRING)\r\n    private AccountType accountStatus;\r\n\r\n    @OneToMany\r\n    private List<Transaction> transactions;\r\n\r\n    //attribute\r\n\r\n    public void setMonthlyMaintenanceFee(Money monthlyMaintenanceFee) {\r\n        switch (this.type){\r\n            case STUDENTCHECKING:\r\n                this.monthlyMaintenanceFee.decreaseAmount(monthlyMaintenanceFee.getAmount());\r\n                break;\r\n\r\n            case CREDITCARD:\r\n                this.monthlyMaintenanceFee.decreaseAmount(monthlyMaintenanceFee.getAmount());\r\n                break;\r\n\r\n            case SAVINGS:\r\n                this.monthlyMaintenanceFee.decreaseAmount(monthlyMaintenanceFee.getAmount());\r\n                break;\r\n\r\n            case CHECKING:\r\n                this.monthlyMaintenanceFee.decreaseAmount(monthlyMaintenanceFee.getAmount());\r\n                BigDecimal valor = new BigDecimal(\"12\");\r\n                if (monthlyMaintenanceFee.getAmount().compareTo(valor)!=0)  {\r\n                    this.monthlyMaintenanceFee.increaseAmount(valor);\r\n                }\r\n                break;\r\n            default:\r\n\r\n        }\r\n\r\n    }\r\n    public void setMinimumBalance(Money minimumBalance) {\r\n        switch (this.type){\r\n            case STUDENTCHECKING:\r\n                this.minimumBalance.decreaseAmount(this.minimumBalance.getAmount());\r\n                break;\r\n            case CREDITCARD:\r\n                this.minimumBalance.decreaseAmount(this.minimumBalance.getAmount());\r\n                break;\r\n            case SAVINGS:\r\n                this.minimumBalance.decreaseAmount(this.minimumBalance.getAmount());\r\n                BigDecimal minor=new BigDecimal(\"100\");\r\n                BigDecimal major=new BigDecimal(\"1000\");\r\n                if (minimumBalance.getAmount().compareTo(minor)<=0 && minimumBalance.getAmount().compareTo(major)>=0) {\r\n                    this.minimumBalance.increaseAmount( minimumBalance.getAmount());\r\n                }else{\r\n                    this.minimumBalance.increaseAmount(minor);\r\n                }\r\n                break;\r\n            case CHECKING:\r\n                this.minimumBalance.decreaseAmount(this.minimumBalance.getAmount());\r\n                BigDecimal valor=new BigDecimal(\"250\");\r\n                if (minimumBalance.getAmount().compareTo(valor)>=0) {\r\n                    this.minimumBalance.increaseAmount(minimumBalance.getAmount());\r\n                }else{\r\n                    this.minimumBalance.increaseAmount(valor);\r\n                }\r\n                break;\r\n            default:\r\n\r\n        }\r\n    }\r\n\r\n    public void setInterestRate(Float interestRate) {\r\n        switch (this.type){\r\n            case STUDENTCHECKING:\r\n                this.interestRate=0F;\r\n                break;\r\n            case CREDITCARD:\r\n                if (interestRate>=0.1F) {\r\n                    this.interestRate=interestRate;\r\n                }else{\r\n                    this.interestRate=0.1F;\r\n                }\r\n                break;\r\n            case SAVINGS:\r\n                if (interestRate>=0.0025F && interestRate<=0.5F) {\r\n                    this.interestRate=interestRate;\r\n                }else{\r\n                    this.interestRate=0.0025F;\r\n                }\r\n                break;\r\n            case CHECKING:\r\n                this.interestRate=0.0F;\r\n                break;\r\n            default:\r\n\r\n        }\r\n    }\r\n\r\n    public void setCreditLimit(Money creditLimit) {\r\n        switch (this.type){\r\n            case STUDENTCHECKING:\r\n                this.creditLimit.decreaseAmount(this.creditLimit.getAmount());\r\n                break;\r\n            case CREDITCARD:\r\n                BigDecimal minor=new BigDecimal(\"100\");\r\n                BigDecimal major=new BigDecimal(\"100000\");\r\n                if (creditLimit.getAmount().compareTo(minor)>=0 && creditLimit.getAmount().compareTo(major)<=0) {\r\n                    this.creditLimit.increaseAmount(creditLimit.getAmount());\r\n                }else{\r\n                    this.creditLimit.increaseAmount(minor);\r\n                }\r\n                break;\r\n            case SAVINGS:\r\n                this.creditLimit.decreaseAmount(this.creditLimit.getAmount());\r\n                break;\r\n            case CHECKING:\r\n                this.creditLimit.decreaseAmount(this.creditLimit.getAmount());\r\n                break;\r\n            default:\r\n        }\r\n    }\r\n\r\n    public void setType(AccountType type) {\r\n        if(this.type != null) return;\r\n        // Inicializamos la cuenta a los valores por defecto\r\n        BigDecimal b1 =new BigDecimal(\"0\");\r\n        Money m1 = new Money(b1);\r\n        setCreditLimit(m1);\r\n        setMinimumBalance(m1);\r\n        setMonthlyMaintenanceFee(m1);\r\n        BigDecimal b2 = new BigDecimal(\"40\");\r\n        Money m2 = new Money(b2);\r\n        setPenaltyFee(m2);\r\n        setInterestRate(0F);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/bankapp/bankApplication/model/Account.java b/src/main/java/bankapp/bankApplication/model/Account.java
--- a/src/main/java/bankapp/bankApplication/model/Account.java	(revision 56969a294c3fbdc1a54ca0cb645e3427ac2b0e10)
+++ b/src/main/java/bankapp/bankApplication/model/Account.java	(date 1726216560437)
@@ -1,6 +1,8 @@
 package bankapp.bankApplication.model;
 
 import bankapp.bankApplication.enums.AccountType;
+import bankapp.bankApplication.interfaces.AccountInterface;
+import com.fasterxml.jackson.annotation.JsonManagedReference;
 import jakarta.persistence.*;
 import lombok.Data;
 import lombok.NoArgsConstructor;
@@ -12,7 +14,7 @@
 @Data
 @NoArgsConstructor
 @Entity
-public class Account {
+public class Account implements AccountInterface {
     @Id
     @GeneratedValue(strategy = GenerationType.IDENTITY)
     private Long id;
@@ -75,7 +77,7 @@
     @Enumerated(EnumType.STRING)
     private AccountType accountStatus;
 
-    @OneToMany
+    @OneToMany(mappedBy = "id")
     private List<Transaction> transactions;
 
     //attribute
@@ -202,4 +204,10 @@
         setPenaltyFee(m2);
         setInterestRate(0F);
     }
+
+    @Override
+    public void addTransaction(Transaction transaction) {
+        transactions.add(transaction);
+        transaction.setAccount(this);
+    }
 }
Index: src/main/java/bankapp/bankApplication/repository/AdminRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package bankapp.bankApplication.repository;\r\n\r\nimport bankapp.bankApplication.model.AccountHolder;\r\nimport org.springframework.data.jpa.repository.JpaRepository;\r\nimport org.springframework.stereotype.Repository;\r\n\r\n@Repository\r\npublic interface AdminRepository extends JpaRepository<AccountHolder, Long>  {\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/bankapp/bankApplication/repository/AdminRepository.java b/src/main/java/bankapp/bankApplication/repository/AdminRepository.java
--- a/src/main/java/bankapp/bankApplication/repository/AdminRepository.java	(revision 56969a294c3fbdc1a54ca0cb645e3427ac2b0e10)
+++ b/src/main/java/bankapp/bankApplication/repository/AdminRepository.java	(date 1726220488915)
@@ -1,9 +1,10 @@
 package bankapp.bankApplication.repository;
 
 import bankapp.bankApplication.model.AccountHolder;
+import bankapp.bankApplication.model.Admin;
 import org.springframework.data.jpa.repository.JpaRepository;
 import org.springframework.stereotype.Repository;
 
 @Repository
-public interface AdminRepository extends JpaRepository<AccountHolder, Long>  {
+public interface AdminRepository extends JpaRepository<Admin, Long>  {
 }
Index: src/main/java/bankapp/bankApplication/model/UserRegistration.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package bankapp.bankApplication.model;\r\n\r\nimport bankapp.bankApplication.enums.UserType;\r\nimport jakarta.persistence.*;\r\nimport lombok.Data;\r\nimport lombok.NoArgsConstructor;\r\n\r\n@Data\r\n@NoArgsConstructor\r\n@Entity\r\npublic class UserRegistration {\r\n    @Id\r\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\r\n    private  Long id;\r\n\r\n    @Column(unique=true, nullable = false)\r\n    private String userName;\r\n\r\n    @Enumerated(EnumType.STRING)\r\n    private UserType type;\r\n\r\n    private Long userId;\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/bankapp/bankApplication/model/UserRegistration.java b/src/main/java/bankapp/bankApplication/model/UserRegistration.java
--- a/src/main/java/bankapp/bankApplication/model/UserRegistration.java	(revision 56969a294c3fbdc1a54ca0cb645e3427ac2b0e10)
+++ b/src/main/java/bankapp/bankApplication/model/UserRegistration.java	(date 1726221739009)
@@ -8,6 +8,8 @@
 @Data
 @NoArgsConstructor
 @Entity
+//@Table(name = "user_registration",
+//        uniqueConstraints = {@UniqueConstraint(columnNames = {"user_id", "type"})})
 public class UserRegistration {
     @Id
     @GeneratedValue(strategy = GenerationType.IDENTITY)
@@ -19,5 +21,10 @@
     @Enumerated(EnumType.STRING)
     private UserType type;
 
-    private Long userId;
+
+    private User user;
+
+    public UserRegistration(User user) {
+        this.user = user;
+    }
 }
Index: src/main/java/bankapp/bankApplication/repository/AdressRepository.java
===================================================================
diff --git a/src/main/java/bankapp/bankApplication/repository/AdressRepository.java b/src/main/java/bankapp/bankApplication/repository/AdressRepository.java
deleted file mode 100644
--- a/src/main/java/bankapp/bankApplication/repository/AdressRepository.java	(revision 56969a294c3fbdc1a54ca0cb645e3427ac2b0e10)
+++ /dev/null	(revision 56969a294c3fbdc1a54ca0cb645e3427ac2b0e10)
@@ -1,9 +0,0 @@
-package bankapp.bankApplication.repository;
-
-import bankapp.bankApplication.model.AccountHolder;
-import org.springframework.data.jpa.repository.JpaRepository;
-import org.springframework.stereotype.Repository;
-
-@Repository
-public interface AdressRepository extends JpaRepository<AccountHolder, Long>  {
-}
Index: src/main/java/bankapp/bankApplication/model/Admin.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package bankapp.bankApplication.model;\r\n\r\nimport jakarta.persistence.Entity;\r\nimport lombok.Data;\r\n\r\n@Data\r\n@Entity\r\npublic abstract class Admin extends User{\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/bankapp/bankApplication/model/Admin.java b/src/main/java/bankapp/bankApplication/model/Admin.java
--- a/src/main/java/bankapp/bankApplication/model/Admin.java	(revision 56969a294c3fbdc1a54ca0cb645e3427ac2b0e10)
+++ b/src/main/java/bankapp/bankApplication/model/Admin.java	(date 1726220488976)
@@ -5,6 +5,6 @@
 
 @Data
 @Entity
-public abstract class Admin extends User{
+public class Admin extends User{
 
 }
Index: src/main/java/bankapp/bankApplication/model/Address.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package bankapp.bankApplication.model;\r\n\r\nimport jakarta.persistence.Entity;\r\nimport jakarta.persistence.GeneratedValue;\r\nimport jakarta.persistence.GenerationType;\r\nimport jakarta.persistence.Id;\r\nimport lombok.Data;\r\nimport lombok.NoArgsConstructor;\r\n\r\n@Data\r\n@Entity\r\n@NoArgsConstructor\r\npublic class Address {\r\n    @Id\r\n    @GeneratedValue(strategy= GenerationType.IDENTITY)\r\n    private Long id;\r\n    private String street;\r\n    private String entrancePortal;\r\n    private String district;\r\n    private String postalCode;\r\n    private String city;\r\n    private String pais;\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/bankapp/bankApplication/model/Address.java b/src/main/java/bankapp/bankApplication/model/Address.java
--- a/src/main/java/bankapp/bankApplication/model/Address.java	(revision 56969a294c3fbdc1a54ca0cb645e3427ac2b0e10)
+++ b/src/main/java/bankapp/bankApplication/model/Address.java	(date 1726216297960)
@@ -1,12 +1,11 @@
 package bankapp.bankApplication.model;
 
-import jakarta.persistence.Entity;
-import jakarta.persistence.GeneratedValue;
-import jakarta.persistence.GenerationType;
-import jakarta.persistence.Id;
+import jakarta.persistence.*;
 import lombok.Data;
 import lombok.NoArgsConstructor;
 
+import java.util.List;
+
 @Data
 @Entity
 @NoArgsConstructor
@@ -21,4 +20,6 @@
     private String city;
     private String pais;
 
+    @OneToMany(mappedBy = "id", cascade = CascadeType.ALL, orphanRemoval = true)
+    private List<AccountHolder> accountHolder;
 }
Index: src/main/java/bankapp/bankApplication/interfaces/AccountInterface.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/bankapp/bankApplication/interfaces/AccountInterface.java b/src/main/java/bankapp/bankApplication/interfaces/AccountInterface.java
new file mode 100644
--- /dev/null	(date 1726216298251)
+++ b/src/main/java/bankapp/bankApplication/interfaces/AccountInterface.java	(date 1726216298251)
@@ -0,0 +1,7 @@
+package bankapp.bankApplication.interfaces;
+
+import bankapp.bankApplication.model.Transaction;
+
+public interface AccountInterface {
+    void addTransaction(Transaction transaction);
+}
Index: src/main/java/bankapp/bankApplication/repository/AddressRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/bankapp/bankApplication/repository/AddressRepository.java b/src/main/java/bankapp/bankApplication/repository/AddressRepository.java
new file mode 100644
--- /dev/null	(date 1726220488954)
+++ b/src/main/java/bankapp/bankApplication/repository/AddressRepository.java	(date 1726220488954)
@@ -0,0 +1,11 @@
+package bankapp.bankApplication.repository;
+
+import bankapp.bankApplication.model.AccountHolder;
+import bankapp.bankApplication.model.Address;
+import org.springframework.data.jpa.repository.JpaRepository;
+import org.springframework.stereotype.Repository;
+
+@Repository
+public interface AddressRepository extends JpaRepository<Address, Long> {
+
+}
\ No newline at end of file
Index: src/main/java/bankapp/bankApplication/repository/UserRegistrationRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/bankapp/bankApplication/repository/UserRegistrationRepository.java b/src/main/java/bankapp/bankApplication/repository/UserRegistrationRepository.java
new file mode 100644
--- /dev/null	(date 1726219818040)
+++ b/src/main/java/bankapp/bankApplication/repository/UserRegistrationRepository.java	(date 1726219818040)
@@ -0,0 +1,9 @@
+package bankapp.bankApplication.repository;
+
+import bankapp.bankApplication.model.AccountHolder;
+import bankapp.bankApplication.model.UserRegistration;
+import org.springframework.data.jpa.repository.JpaRepository;
+
+public interface UserRegistrationRepository extends JpaRepository<UserRegistration, Long> {
+
+}
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"65c3cec8-c7bc-414d-a8d4-4dc34624514a\" name=\"Changes\" comment=\"\">\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/bankapp/bankApplication/enums/UserType.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/bankapp/bankApplication/model/UserRegistration.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/target/classes/bankapp/bankApplication/enums/UserType.class\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/target/classes/bankapp/bankApplication/model/UserRegistration.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/bankapp/bankApplication/model/Account.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/bankapp/bankApplication/model/Account.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/bankapp/bankApplication/model/Transaction.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/bankapp/bankApplication/model/Transaction.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/bankapp/bankApplication/model/User.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/bankapp/bankApplication/model/User.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/bankapp/bankApplication/model/UserAccountHolder.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/bankapp/bankApplication/model/AccountHolder.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/bankapp/bankApplication/model/UserAdmin.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/bankapp/bankApplication/model/Admin.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/bankapp/bankApplication/model/UserThirdParty.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/bankapp/bankApplication/model/ThirdParty.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/bankapp/bankApplication/repository/AccountHolderRepository.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/bankapp/bankApplication/repository/AccountHolderRepository.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/bankapp/bankApplication/repository/AccountRepository.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/bankapp/bankApplication/repository/AccountRepository.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/bankapp/bankApplication/repository/AdminRepository.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/bankapp/bankApplication/repository/AdminRepository.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/bankapp/bankApplication/repository/AdressRepository.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/bankapp/bankApplication/repository/AdressRepository.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/bankapp/bankApplication/repository/ThirdPartyRepository.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/bankapp/bankApplication/repository/ThirdPartyRepository.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/bankapp/bankApplication/repository/TransactionRepository.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/bankapp/bankApplication/repository/TransactionRepository.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/bankapp/bankApplication/model/Account$1.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/bankapp/bankApplication/model/Account$1.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/bankapp/bankApplication/model/Account.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/bankapp/bankApplication/model/Account.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/bankapp/bankApplication/model/AccountHolder.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/bankapp/bankApplication/model/AccountHolder.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/bankapp/bankApplication/model/Transaction.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/bankapp/bankApplication/model/Transaction.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/bankapp/bankApplication/model/User.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/bankapp/bankApplication/model/User.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/bankapp/bankApplication/model/UserAccountHolder.class\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/bankapp/bankApplication/model/UserAdmin.class\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/bankapp/bankApplication/model/UserThirdParty.class\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/bankapp/bankApplication/repository/AccountHolderRepository.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/bankapp/bankApplication/repository/AccountHolderRepository.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/bankapp/bankApplication/repository/AccountRepository.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/bankapp/bankApplication/repository/AccountRepository.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/bankapp/bankApplication/repository/AdminRepository.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/bankapp/bankApplication/repository/AdminRepository.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/bankapp/bankApplication/repository/AdressRepository.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/bankapp/bankApplication/repository/AdressRepository.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/bankapp/bankApplication/repository/ThirdPartyRepository.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/bankapp/bankApplication/repository/ThirdPartyRepository.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/bankapp/bankApplication/repository/TransactionRepository.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/bankapp/bankApplication/repository/TransactionRepository.class\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n        <option value=\"Enum\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"main\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n    <option name=\"ROOT_SYNC\" value=\"DONT_SYNC\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;Montsita&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/Montsita/bankApplication.git&quot;,\r\n    &quot;accountId&quot;: &quot;0ff5e35a-9b53-46c9-906e-d64d4c413459&quot;\r\n  }\r\n}</component>\r\n  <component name=\"MavenImportPreferences\">\r\n    <option name=\"generalSettings\">\r\n      <MavenGeneralSettings>\r\n        <option name=\"mavenHomeTypeForPersistence\" value=\"WRAPPER\" />\r\n      </MavenGeneralSettings>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 1\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2lpKHuSrCQkCfVJCIK5dcV099GN\" />\r\n  <component name=\"ProjectLevelVcsManager\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Application.BankApplication.executor&quot;: &quot;Run&quot;,\r\n    &quot;Application.Main.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;jose&quot;,\r\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/Montse/Desktop/BootcampIronHack/springBoot/Lab2JavaIntroToSpringBoot&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"bankapp.bankApplication.BankApplication\" />\r\n      <module name=\"bankApplication\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"65c3cec8-c7bc-414d-a8d4-4dc34624514a\" name=\"Changes\" comment=\"\" />\r\n      <created>1725871493326</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1725871493326</updated>\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 56969a294c3fbdc1a54ca0cb645e3427ac2b0e10)
+++ b/.idea/workspace.xml	(date 1726220489814)
@@ -5,37 +5,29 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="65c3cec8-c7bc-414d-a8d4-4dc34624514a" name="Changes" comment="">
-      <change afterPath="$PROJECT_DIR$/src/main/java/bankapp/bankApplication/enums/UserType.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/bankapp/bankApplication/model/UserRegistration.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/target/classes/bankapp/bankApplication/enums/UserType.class" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/target/classes/bankapp/bankApplication/model/UserRegistration.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/bankapp/bankApplication/DataLoader.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/bankapp/bankApplication/interfaces/AccountInterface.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/bankapp/bankApplication/repository/AddressRepository.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/bankapp/bankApplication/repository/UserRegistrationRepository.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/bankapp/bankApplication/model/Account.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/bankapp/bankApplication/model/Account.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/bankapp/bankApplication/model/AccountHolder.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/bankapp/bankApplication/model/AccountHolder.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/bankapp/bankApplication/model/Address.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/bankapp/bankApplication/model/Address.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/bankapp/bankApplication/model/Admin.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/bankapp/bankApplication/model/Admin.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/bankapp/bankApplication/model/Transaction.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/bankapp/bankApplication/model/Transaction.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/bankapp/bankApplication/model/User.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/bankapp/bankApplication/model/User.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/bankapp/bankApplication/model/UserAccountHolder.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/bankapp/bankApplication/model/AccountHolder.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/bankapp/bankApplication/model/UserAdmin.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/bankapp/bankApplication/model/Admin.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/bankapp/bankApplication/model/UserThirdParty.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/bankapp/bankApplication/model/ThirdParty.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/bankapp/bankApplication/repository/AccountHolderRepository.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/bankapp/bankApplication/repository/AccountHolderRepository.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/bankapp/bankApplication/model/UserRegistration.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/bankapp/bankApplication/model/UserRegistration.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/bankapp/bankApplication/repository/AccountRepository.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/bankapp/bankApplication/repository/AccountRepository.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/bankapp/bankApplication/repository/AdminRepository.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/bankapp/bankApplication/repository/AdminRepository.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/bankapp/bankApplication/repository/AdressRepository.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/bankapp/bankApplication/repository/AdressRepository.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/bankapp/bankApplication/repository/AdressRepository.java" beforeDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/bankapp/bankApplication/repository/ThirdPartyRepository.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/bankapp/bankApplication/repository/ThirdPartyRepository.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/bankapp/bankApplication/repository/TransactionRepository.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/bankapp/bankApplication/repository/TransactionRepository.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/target/classes/bankapp/bankApplication/model/Account$1.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/bankapp/bankApplication/model/Account$1.class" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/target/classes/bankapp/bankApplication/model/Account.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/bankapp/bankApplication/model/Account.class" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/target/classes/bankapp/bankApplication/model/AccountHolder.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/bankapp/bankApplication/model/AccountHolder.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/bankapp/bankApplication/model/Address.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/bankapp/bankApplication/model/Address.class" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/target/classes/bankapp/bankApplication/model/Transaction.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/bankapp/bankApplication/model/Transaction.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/bankapp/bankApplication/model/User.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/bankapp/bankApplication/model/User.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/bankapp/bankApplication/model/UserAccountHolder.class" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/bankapp/bankApplication/model/UserAdmin.class" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/bankapp/bankApplication/model/UserThirdParty.class" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/bankapp/bankApplication/repository/AccountHolderRepository.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/bankapp/bankApplication/repository/AccountHolderRepository.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/bankapp/bankApplication/repository/AccountRepository.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/bankapp/bankApplication/repository/AccountRepository.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/bankapp/bankApplication/repository/AdminRepository.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/bankapp/bankApplication/repository/AdminRepository.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/bankapp/bankApplication/repository/AdressRepository.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/bankapp/bankApplication/repository/AdressRepository.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/bankapp/bankApplication/repository/ThirdPartyRepository.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/bankapp/bankApplication/repository/ThirdPartyRepository.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/bankapp/bankApplication/repository/TransactionRepository.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/bankapp/bankApplication/repository/TransactionRepository.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/bankapp/bankApplication/model/UserRegistration.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/bankapp/bankApplication/model/UserRegistration.class" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -45,8 +37,9 @@
   <component name="FileTemplateManagerImpl">
     <option name="RECENT_TEMPLATES">
       <list>
-        <option value="Class" />
         <option value="Enum" />
+        <option value="Class" />
+        <option value="Interface" />
       </list>
     </option>
   </component>
Index: src/main/java/bankapp/bankApplication/DataLoader.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/bankapp/bankApplication/DataLoader.java b/src/main/java/bankapp/bankApplication/DataLoader.java
new file mode 100644
--- /dev/null	(date 1726221739015)
+++ b/src/main/java/bankapp/bankApplication/DataLoader.java	(date 1726221739015)
@@ -0,0 +1,41 @@
+package bankapp.bankApplication;
+
+import bankapp.bankApplication.model.*;
+
+import bankapp.bankApplication.repository.*;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.boot.CommandLineRunner;
+import org.springframework.stereotype.Component;
+
+@Component
+public class DataLoader  implements CommandLineRunner {
+    @Autowired
+    private AddressRepository addressRepository ;
+    @Autowired
+    private AccountHolderRepository accountHolderRepository;
+    @Autowired
+    private AccountRepository accountRepository;
+    @Autowired
+    private TransactionRepository transactionRepository;
+    @Autowired
+    private AdminRepository adminRepository;
+    @Autowired
+    private ThirdPartyRepository thirdPartyRepository;
+    @Autowired
+    private UserRegistrationRepository userRegistrationRepository;
+
+    @Override
+    public void run(String... args) throws Exception {
+
+        // Create new admin and link it with the userRegistration
+        Admin admin1= new Admin() ;
+        admin1.setName("Montse");
+        adminRepository.save(admin1);
+
+        UserRegistration userRegistration1 = new UserRegistration(admin1);
+        userRegistrationRepository.save(userRegistration1);
+
+        admin1.setUser(userRegistration1);
+
+    }
+}
Index: src/main/java/bankapp/bankApplication/model/Transaction.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package bankapp.bankApplication.model;\r\n\r\nimport bankapp.bankApplication.enums.TransactionType;\r\nimport jakarta.persistence.*;\r\nimport lombok.Data;\r\n\r\nimport java.time.LocalDate;\r\n\r\n@Data\r\n@Entity\r\npublic class Transaction {\r\n    @Id\r\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\r\n    private Long id;\r\n\r\n    private double balance;\r\n\r\n    @Enumerated(EnumType.STRING)\r\n    private TransactionType transactionType;\r\n\r\n    private LocalDate transacionDate;\r\n\r\n    @Embedded\r\n    @AttributeOverrides({\r\n            @AttributeOverride(name = \"amount\", column = @Column(name = \"amount\")),\r\n            @AttributeOverride(name= \"currency\", column = @Column(name= \"currency\"))\r\n    })\r\n    private Money amount;\r\n\r\n    private Long originId;\r\n    private Long destinyId;\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/bankapp/bankApplication/model/Transaction.java b/src/main/java/bankapp/bankApplication/model/Transaction.java
--- a/src/main/java/bankapp/bankApplication/model/Transaction.java	(revision 56969a294c3fbdc1a54ca0cb645e3427ac2b0e10)
+++ b/src/main/java/bankapp/bankApplication/model/Transaction.java	(date 1726216560464)
@@ -1,6 +1,7 @@
 package bankapp.bankApplication.model;
 
 import bankapp.bankApplication.enums.TransactionType;
+import com.fasterxml.jackson.annotation.JsonBackReference;
 import jakarta.persistence.*;
 import lombok.Data;
 
@@ -29,4 +30,8 @@
 
     private Long originId;
     private Long destinyId;
+
+    @ManyToOne
+    @JoinColumn(name="account_id")
+    private Account account;
 }
Index: src/main/java/bankapp/bankApplication/model/AccountHolder.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package bankapp.bankApplication.model;\r\n\r\nimport jakarta.persistence.*;\r\nimport lombok.Data;\r\n\r\nimport java.time.LocalDate;\r\n\r\n@Data\r\n@Entity\r\npublic class AccountHolder extends User {\r\n    private LocalDate dataOfBirth;\r\n    @ManyToOne\r\n    private Address primaryAddress;\r\n    private String mailingAddress;\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/bankapp/bankApplication/model/AccountHolder.java b/src/main/java/bankapp/bankApplication/model/AccountHolder.java
--- a/src/main/java/bankapp/bankApplication/model/AccountHolder.java	(revision 56969a294c3fbdc1a54ca0cb645e3427ac2b0e10)
+++ b/src/main/java/bankapp/bankApplication/model/AccountHolder.java	(date 1726214674870)
@@ -9,7 +9,10 @@
 @Entity
 public class AccountHolder extends User {
     private LocalDate dataOfBirth;
+
+    private String mailingAddress;
+
     @ManyToOne
+    @JoinColumn(name="address_id")
     private Address primaryAddress;
-    private String mailingAddress;
 }
